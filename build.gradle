plugins {
    id 'java'
    id 'build-announcements'
    id 'maven'
    id 'maven-publish'
    id 'idea'
    id "io.spring.dependency-management" version "1.0.0.RC2"
    id 'jacoco'
    id "com.jfrog.bintray" version "1.7.3"
}

def license = "Apache-2.0"
version '1.0.0-RC1'
group = rootProject.defaultGroup

publishing {
    publications {
        "safely"(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar
            groupId rootProject.group
            artifactId rootProject.name
            version rootProject.version
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def delombokedDir = "${rootProject.buildDir}/src-delomboked"

repositories {
    jcenter()
    maven { url "file://${System.getProperty("user.home")}/.m2/repository" }
}

dependencyManagement {
    compile {
        dependencies {
            dependency 'org.projectlombok:lombok:1.16.12'
        }
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.projectlombok:lombok'
}

configurations {
    lombok
    lombok.extendsFrom(configurations.compile)
    dependencies {
        compile 'org.projectlombok:lombok'
    }
}

configurations.compile.transitive = true

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs <<
                "-Xlint:unchecked" <<
                "-Xlint:deprecation" <<
                "-Xdiags:verbose"
    }
}

task delombok {
    doLast {
        description 'Delomboks the source code'
        ant.taskdef(classname: 'lombok.delombok.ant.Tasks$Delombok', classpath: configurations.lombok.asPath, name: 'delombok')
        ant.mkdir(dir: delombokedDir)
        ant.delombok(verbose: 'true', encoding: 'UTF-8', to: delombokedDir, from: 'src/main/java')
    }
}

task javadoc(type: Javadoc, group: "documentation", overwrite: true) {
    dependsOn delombok
    source delombokedDir
}

task javadocJar(type: Jar) {
    dependsOn javadoc
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    dependsOn classes
    classifier = 'sources'
    from sourceSets.main.allSource
}

jacocoTestReport {
    dependsOn delombok
    additionalSourceDirs = files(delombokedDir)
    reports {
        xml.enabled true
    }
}

task cleanTests(group: "verification") {
    dependsOn project.cleanTest
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

bintray {
    user = rootProject.hasProperty("bintrayUser") ? bintrayUser : ""
    key = rootProject.hasProperty("bintrayApiKey") ? bintrayApiKey : ""
    publications = [rootProject.name]
    pkg {
        repo = 'maven'
        name = rootProject.name
        licenses = [license]
        vcsUrl = "${rootProject.github}/${rootProject.githubUsername}/${rootProject.name}"

        githubRepo = "${rootProject.githubUsername}/${rootProject.name}"
        githubReleaseNotesFile = 'README.md'

        publicDownloadNumbers = true

        version {
            name = rootProject.version
            released = new Date()
            vcsTag = rootProject.version

            gpg {
                sign = true
                passphrase = hasProperty("gpgPassPhrase") ? gpgPassPhrase : ""
            }
        }
    }
}
